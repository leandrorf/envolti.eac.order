version: '3.8'

networks:
  minha_rede:
    driver: bridge

services:
  order-written-api:
    container_name: order-written-api
    build:
      context: .
      dockerfile: src/adapters/driving/envolti.api.order.written.driving/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - minha_rede

  order-written-service:
    container_name: order-written-service
    build:
      context: .
      dockerfile: src/adapters/driving/envolti.service.order.written.driving/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
    ports:
      - "8082:8082"
      - "8083:8083"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - minha_rede

  order-reading-api:
    container_name: order-reading-api
    build:
      context: .
      dockerfile: src/adapters/driving/envolti.api.order.reading.driving/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
    ports:
      - "0.0.0.0:8084:8084"
      - "0.0.0.0:8085:8085"
    networks:
      - minha_rede

  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2025-latest
    environment:
      SA_PASSWORD: "L3@ndr0rf"
      ACCEPT_EULA: "Y"
    ports:
      - "0.0.0.0:1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - minha_rede

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "0.0.0.0:5672:5672"
      - "0.0.0.0:15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - minha_rede
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "0.0.0.0:6379:6379"
    networks:
      - minha_rede

  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki-config.yaml:/mnt/config/loki-config.yaml
    command:
      - "--config.file=/mnt/config/loki-config.yaml"
    networks:
      - minha_rede

  promtail:
    image: grafana/promtail:3.4.1
    container_name: promtail
    depends_on:
      - loki
    volumes:
      - loki_data:/loki
      - ./config/promtail-config.yaml:/mnt/config/promtail-config.yaml
      - ./config/temp:/var/log
    command:
      - "--config.file=/mnt/config/promtail-config.yaml"    
    networks:
      - minha_rede

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - loki
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - minha_rede

volumes:
  sqlserver_data:
  grafana_data:
  loki_data: